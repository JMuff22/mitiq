{".class": "MypyFile", "_fullname": "cirq.testing.op_tree", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.testing.op_tree.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.testing.op_tree.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.testing.op_tree.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.testing.op_tree.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.testing.op_tree.__package__", "name": "__package__", "type": "builtins.str"}}, "assert_equivalent_op_tree": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["x", "y"], "flags": [], "fullname": "cirq.testing.op_tree.assert_equivalent_op_tree", "name": "assert_equivalent_op_tree", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["x", "y"], "arg_types": [{".class": "TypeAliasType", "args": [], "type_ref": "cirq.ops.op_tree.OP_TREE"}, {".class": "TypeAliasType", "args": [], "type_ref": "cirq.ops.op_tree.OP_TREE"}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "assert_equivalent_op_tree", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "ops": {".class": "SymbolTableNode", "cross_ref": "cirq.ops", "kind": "Gdef"}}, "path": "/home/purva/anaconda3/envs/mitiq_env/lib/python3.12/site-packages/cirq/testing/op_tree.py"}