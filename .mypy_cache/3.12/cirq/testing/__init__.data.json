{".class": "MypyFile", "_fullname": "cirq.testing", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "DEFAULT_GATE_DOMAIN": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.random_circuit.DEFAULT_GATE_DOMAIN", "kind": "Gdef"}, "DoesNotSupportSerializationGate": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.gate_features.DoesNotSupportSerializationGate", "kind": "Gdef"}, "EqualsTester": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.equals_tester.EqualsTester", "kind": "Gdef"}, "FakePrinter": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.repr_pretty_tester.FakePrinter", "kind": "Gdef"}, "NoIdentifierQubit": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.no_identifier_qubit.NoIdentifierQubit", "kind": "Gdef"}, "OrderTester": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.order_tester.OrderTester", "kind": "Gdef"}, "PhaseUsingCleanAncilla": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.sample_gates.PhaseUsingCleanAncilla", "kind": "Gdef"}, "PhaseUsingDirtyAncilla": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.sample_gates.PhaseUsingDirtyAncilla", "kind": "Gdef"}, "RoutingTestingDevice": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.routing_devices.RoutingTestingDevice", "kind": "Gdef"}, "SingleQubitGate": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.gate_features.SingleQubitGate", "kind": "Gdef"}, "ThreeQubitGate": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.gate_features.ThreeQubitGate", "kind": "Gdef"}, "TwoQubitGate": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.gate_features.TwoQubitGate", "kind": "Gdef"}, "ValidatingTestDevice": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.devices.ValidatingTestDevice", "kind": "Gdef"}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.testing.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.testing.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.testing.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.testing.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.testing.__package__", "name": "__package__", "type": "builtins.str"}}, "__path__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.testing.__path__", "name": "__path__", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "builtins.list"}}}, "assert_all_implemented_act_on_effects_match_unitary": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_act_on.assert_all_implemented_act_on_effects_match_unitary", "kind": "Gdef"}, "assert_allclose_up_to_global_phase": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.lin_alg_utils.assert_allclose_up_to_global_phase", "kind": "Gdef"}, "assert_circuits_have_same_unitary_given_final_permutation": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.circuit_compare.assert_circuits_have_same_unitary_given_final_permutation", "kind": "Gdef"}, "assert_circuits_with_terminal_measurements_are_equivalent": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.circuit_compare.assert_circuits_with_terminal_measurements_are_equivalent", "kind": "Gdef"}, "assert_commutes_magic_method_consistent_with_unitaries": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_protocols.assert_commutes_magic_method_consistent_with_unitaries", "kind": "Gdef"}, "assert_consistent_channel": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_channels.assert_consistent_channel", "kind": "Gdef"}, "assert_consistent_mixture": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_channels.assert_consistent_mixture", "kind": "Gdef"}, "assert_consistent_resolve_parameters": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_resolve_parameters.assert_consistent_resolve_parameters", "kind": "Gdef"}, "assert_controlled_and_controlled_by_identical": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_controlled_gate_op.assert_controlled_and_controlled_by_identical", "kind": "Gdef"}, "assert_controlled_unitary_consistent": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_controlled_gate_op.assert_controlled_unitary_consistent", "kind": "Gdef"}, "assert_decompose_ends_at_default_gateset": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_decomposition.assert_decompose_ends_at_default_gateset", "kind": "Gdef"}, "assert_decompose_is_consistent_with_unitary": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_decomposition.assert_decompose_is_consistent_with_unitary", "kind": "Gdef"}, "assert_deprecated": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.deprecation.assert_deprecated", "kind": "Gdef"}, "assert_eigengate_implements_consistent_protocols": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_protocols.assert_eigengate_implements_consistent_protocols", "kind": "Gdef"}, "assert_equivalent_computational_basis_map": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.equivalent_basis_map.assert_equivalent_computational_basis_map", "kind": "Gdef"}, "assert_equivalent_op_tree": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.op_tree.assert_equivalent_op_tree", "kind": "Gdef"}, "assert_equivalent_repr": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.equivalent_repr_eval.assert_equivalent_repr", "kind": "Gdef"}, "assert_has_consistent_apply_channel": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.circuit_compare.assert_has_consistent_apply_channel", "kind": "Gdef"}, "assert_has_consistent_apply_unitary": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.circuit_compare.assert_has_consistent_apply_unitary", "kind": "Gdef"}, "assert_has_consistent_apply_unitary_for_various_exponents": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.circuit_compare.assert_has_consistent_apply_unitary_for_various_exponents", "kind": "Gdef"}, "assert_has_consistent_qid_shape": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.circuit_compare.assert_has_consistent_qid_shape", "kind": "Gdef"}, "assert_has_consistent_trace_distance_bound": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_protocols.assert_has_consistent_trace_distance_bound", "kind": "Gdef"}, "assert_has_diagram": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.circuit_compare.assert_has_diagram", "kind": "Gdef"}, "assert_implements_consistent_protocols": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_protocols.assert_implements_consistent_protocols", "kind": "Gdef"}, "assert_json_roundtrip_works": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.json.assert_json_roundtrip_works", "kind": "Gdef"}, "assert_logs": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.logs.assert_logs", "kind": "Gdef"}, "assert_pauli_expansion_is_consistent_with_unitary": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_pauli_expansion.assert_pauli_expansion_is_consistent_with_unitary", "kind": "Gdef"}, "assert_phase_by_is_consistent_with_unitary": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_phase_by.assert_phase_by_is_consistent_with_unitary", "kind": "Gdef"}, "assert_qasm_is_consistent_with_unitary": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_qasm.assert_qasm_is_consistent_with_unitary", "kind": "Gdef"}, "assert_repr_pretty": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.repr_pretty_tester.assert_repr_pretty", "kind": "Gdef"}, "assert_repr_pretty_contains": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.repr_pretty_tester.assert_repr_pretty_contains", "kind": "Gdef"}, "assert_same_circuits": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.circuit_compare.assert_same_circuits", "kind": "Gdef"}, "assert_specifies_has_unitary_if_unitary": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_specified_has_unitary.assert_specifies_has_unitary_if_unitary", "kind": "Gdef"}, "assert_unitary_is_consistent": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.consistent_unitary.assert_unitary_is_consistent", "kind": "Gdef"}, "construct_grid_device": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.routing_devices.construct_grid_device", "kind": "Gdef"}, "construct_ring_device": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.routing_devices.construct_ring_device", "kind": "Gdef"}, "highlight_text_differences": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.circuit_compare.highlight_text_differences", "kind": "Gdef"}, "nonoptimal_toffoli_circuit": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.sample_circuits.nonoptimal_toffoli_circuit", "kind": "Gdef"}, "random_circuit": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.random_circuit.random_circuit", "kind": "Gdef"}, "random_density_matrix": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.lin_alg_utils.random_density_matrix", "kind": "Gdef"}, "random_orthogonal": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.lin_alg_utils.random_orthogonal", "kind": "Gdef"}, "random_special_orthogonal": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.lin_alg_utils.random_special_orthogonal", "kind": "Gdef"}, "random_special_unitary": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.lin_alg_utils.random_special_unitary", "kind": "Gdef"}, "random_superposition": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.lin_alg_utils.random_superposition", "kind": "Gdef"}, "random_two_qubit_circuit_with_czs": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.random_circuit.random_two_qubit_circuit_with_czs", "kind": "Gdef"}, "random_unitary": {".class": "SymbolTableNode", "cross_ref": "cirq.testing.lin_alg_utils.random_unitary", "kind": "Gdef"}}, "path": "/home/purva/anaconda3/envs/mitiq_env/lib/python3.12/site-packages/cirq/testing/__init__.py"}