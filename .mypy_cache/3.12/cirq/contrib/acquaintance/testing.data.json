{".class": "MypyFile", "_fullname": "cirq.contrib.acquaintance.testing", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "PermutationGate": {".class": "SymbolTableNode", "cross_ref": "cirq.contrib.acquaintance.permutation.PermutationGate", "kind": "Gdef"}, "Sequence": {".class": "SymbolTableNode", "cross_ref": "typing.Sequence", "kind": "Gdef"}, "TYPE_CHECKING": {".class": "SymbolTableNode", "cross_ref": "typing.TYPE_CHECKING", "kind": "Gdef"}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.contrib.acquaintance.testing.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.contrib.acquaintance.testing.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.contrib.acquaintance.testing.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.contrib.acquaintance.testing.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cirq.contrib.acquaintance.testing.__package__", "name": "__package__", "type": "builtins.str"}}, "assert_permutation_decomposition_equivalence": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["gate", "n_qubits"], "flags": [], "fullname": "cirq.contrib.acquaintance.testing.assert_permutation_decomposition_equivalence", "name": "assert_permutation_decomposition_equivalence", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["gate", "n_qubits"], "arg_types": ["cirq.contrib.acquaintance.permutation.PermutationGate", "builtins.int"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "assert_permutation_decomposition_equivalence", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "cast": {".class": "SymbolTableNode", "cross_ref": "typing.cast", "kind": "Gdef"}, "cirq": {".class": "SymbolTableNode", "cross_ref": "cirq", "kind": "Gdef"}, "devices": {".class": "SymbolTableNode", "cross_ref": "cirq.devices", "kind": "Gdef"}, "ops": {".class": "SymbolTableNode", "cross_ref": "cirq.ops", "kind": "Gdef"}, "protocols": {".class": "SymbolTableNode", "cross_ref": "cirq.protocols", "kind": "Gdef"}, "update_mapping": {".class": "SymbolTableNode", "cross_ref": "cirq.contrib.acquaintance.permutation.update_mapping", "kind": "Gdef"}}, "path": "/home/purva/anaconda3/envs/mitiq_env/lib/python3.12/site-packages/cirq/contrib/acquaintance/testing.py"}