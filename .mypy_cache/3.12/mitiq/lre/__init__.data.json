{".class": "MypyFile", "_fullname": "mitiq.lre", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "mitiq.lre.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "mitiq.lre.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "mitiq.lre.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "mitiq.lre.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "mitiq.lre.__package__", "name": "__package__", "type": "builtins.str"}}, "__path__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "mitiq.lre.__path__", "name": "__path__", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "builtins.list"}}}, "multivariate_layer_scaling": {".class": "SymbolTableNode", "cross_ref": "mitiq.lre.multivariate_scaling.layerwise_folding.multivariate_layer_scaling", "kind": "Gdef"}, "multivariate_richardson_coefficients": {".class": "SymbolTableNode", "cross_ref": "mitiq.lre.inference.multivariate_richardson.multivariate_richardson_coefficients", "kind": "Gdef"}, "sample_matrix": {".class": "SymbolTableNode", "cross_ref": "mitiq.lre.inference.multivariate_richardson.sample_matrix", "kind": "Gdef"}}, "path": "mitiq/lre/__init__.py"}